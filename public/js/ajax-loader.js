/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/ajax-loader.js":
/*!*************************************!*\
  !*** ./resources/js/ajax-loader.js ***!
  \*************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\r\n * AJAX Loader Component\r\n * Poskytuje funkcionalitu pre dynamické načítavanie dát cez AJAX\r\n */\nvar AjaxLoader = /*#__PURE__*/function () {\n  function AjaxLoader() {\n    var _document$querySelect;\n    _classCallCheck(this, AjaxLoader);\n    this.defaultOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRF-TOKEN': (_document$querySelect = document.querySelector('meta[name=\"csrf-token\"]')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('content')\n      },\n      timeout: 10000,\n      showLoader: true,\n      loaderText: 'Načítavam...'\n    };\n  }\n\n  /**\r\n   * Vykoná AJAX požiadavku\r\n   * @param {string} url URL endpoint\r\n   * @param {Object} options Možnosti požiadavky\r\n   * @returns {Promise} Promise s odpoveďou\r\n   */\n  return _createClass(AjaxLoader, [{\n    key: \"request\",\n    value: (function () {\n      var _request = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(url) {\n        var options,\n          config,\n          controller,\n          timeoutId,\n          response,\n          data,\n          _args = arguments,\n          _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              config = _objectSpread(_objectSpread({}, this.defaultOptions), options); // Zobraz loader ak je povolený\n              if (config.showLoader) {\n                this.showLoader(config.loaderText);\n              }\n              _context.p = 1;\n              controller = new AbortController();\n              timeoutId = setTimeout(function () {\n                return controller.abort();\n              }, config.timeout);\n              _context.n = 2;\n              return fetch(url, _objectSpread(_objectSpread({}, config), {}, {\n                signal: controller.signal\n              }));\n            case 2:\n              response = _context.v;\n              clearTimeout(timeoutId);\n              if (response.ok) {\n                _context.n = 3;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(response.status));\n            case 3:\n              _context.n = 4;\n              return response.json();\n            case 4:\n              data = _context.v;\n              return _context.a(2, data);\n            case 5:\n              _context.p = 5;\n              _t = _context.v;\n              if (!(_t.name === 'AbortError')) {\n                _context.n = 6;\n                break;\n              }\n              throw new Error('Požiadavka bola prerušená kvôli timeout.');\n            case 6:\n              throw _t;\n            case 7:\n              _context.p = 7;\n              if (config.showLoader) {\n                this.hideLoader();\n              }\n              return _context.f(7);\n            case 8:\n              return _context.a(2);\n          }\n        }, _callee, this, [[1, 5, 7, 8]]);\n      }));\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n    /**\r\n     * GET požiadavka\r\n     */\n    )\n  }, {\n    key: \"get\",\n    value: (function () {\n      var _get = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(url) {\n        var params,\n          options,\n          urlObj,\n          _args2 = arguments;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              params = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n              urlObj = new URL(url, window.location.origin);\n              Object.keys(params).forEach(function (key) {\n                return urlObj.searchParams.append(key, params[key]);\n              });\n              return _context2.a(2, this.request(urlObj.toString(), _objectSpread(_objectSpread({}, options), {}, {\n                method: 'GET'\n              })));\n          }\n        }, _callee2, this);\n      }));\n      function get(_x2) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n    /**\r\n     * POST požiadavka\r\n     */\n    )\n  }, {\n    key: \"post\",\n    value: (function () {\n      var _post = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(url) {\n        var data,\n          options,\n          _args3 = arguments;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              data = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n              options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n              return _context3.a(2, this.request(url, _objectSpread(_objectSpread({}, options), {}, {\n                method: 'POST',\n                body: JSON.stringify(data)\n              })));\n          }\n        }, _callee3, this);\n      }));\n      function post(_x3) {\n        return _post.apply(this, arguments);\n      }\n      return post;\n    }()\n    /**\r\n     * PUT požiadavka\r\n     */\n    )\n  }, {\n    key: \"put\",\n    value: (function () {\n      var _put = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(url) {\n        var data,\n          options,\n          _args4 = arguments;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              data = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n              return _context4.a(2, this.request(url, _objectSpread(_objectSpread({}, options), {}, {\n                method: 'PUT',\n                body: JSON.stringify(data)\n              })));\n          }\n        }, _callee4, this);\n      }));\n      function put(_x4) {\n        return _put.apply(this, arguments);\n      }\n      return put;\n    }()\n    /**\r\n     * DELETE požiadavka\r\n     */\n    )\n  }, {\n    key: \"delete\",\n    value: (function () {\n      var _delete2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(url) {\n        var options,\n          _args5 = arguments;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              options = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n              return _context5.a(2, this.request(url, _objectSpread(_objectSpread({}, options), {}, {\n                method: 'DELETE'\n              })));\n          }\n        }, _callee5, this);\n      }));\n      function _delete(_x5) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n    /**\r\n     * Zobrazí loader\r\n     */\n    )\n  }, {\n    key: \"showLoader\",\n    value: function showLoader() {\n      var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Načítavam...';\n      var loader = document.getElementById('ajax-loader');\n      if (!loader) {\n        loader = document.createElement('div');\n        loader.id = 'ajax-loader';\n        loader.className = 'ajax-loader';\n        loader.innerHTML = \"\\n                <div class=\\\"ajax-loader-backdrop\\\">\\n                    <div class=\\\"ajax-loader-content\\\">\\n                        <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\n                            <span class=\\\"visually-hidden\\\">Loading...</span>\\n                        </div>\\n                        <div class=\\\"ajax-loader-text mt-2\\\">\".concat(text, \"</div>\\n                    </div>\\n                </div>\\n            \");\n        document.body.appendChild(loader);\n      }\n      loader.querySelector('.ajax-loader-text').textContent = text;\n      loader.style.display = 'block';\n    }\n\n    /**\r\n     * Skryje loader\r\n     */\n  }, {\n    key: \"hideLoader\",\n    value: function hideLoader() {\n      var loader = document.getElementById('ajax-loader');\n      if (loader) {\n        loader.style.display = 'none';\n      }\n    }\n\n    /**\r\n     * Načíta locations pre danú kategoriu\r\n     */\n  }, {\n    key: \"loadLocationsForCategory\",\n    value: (function () {\n      var _loadLocationsForCategory = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(categoryId) {\n        var data, _t2;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.p = _context6.n) {\n            case 0:\n              if (categoryId) {\n                _context6.n = 1;\n                break;\n              }\n              return _context6.a(2, []);\n            case 1:\n              _context6.p = 1;\n              _context6.n = 2;\n              return this.get(\"/ajax/locations/\".concat(categoryId));\n            case 2:\n              data = _context6.v;\n              return _context6.a(2, data.locations || []);\n            case 3:\n              _context6.p = 3;\n              _t2 = _context6.v;\n              console.error('Chyba pri načítavaní locations:', _t2);\n              this.showError('Chyba pri načítavaní lokácií');\n              return _context6.a(2, []);\n          }\n        }, _callee6, this, [[1, 3]]);\n      }));\n      function loadLocationsForCategory(_x6) {\n        return _loadLocationsForCategory.apply(this, arguments);\n      }\n      return loadLocationsForCategory;\n    }()\n    /**\r\n     * Načíta assets pre danú lokáciu\r\n     */\n    )\n  }, {\n    key: \"loadAssetsForLocation\",\n    value: (function () {\n      var _loadAssetsForLocation = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(locationId) {\n        var data, _t3;\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.p = _context7.n) {\n            case 0:\n              if (locationId) {\n                _context7.n = 1;\n                break;\n              }\n              return _context7.a(2, []);\n            case 1:\n              _context7.p = 1;\n              _context7.n = 2;\n              return this.get(\"/ajax/assets/\".concat(locationId));\n            case 2:\n              data = _context7.v;\n              return _context7.a(2, data.assets || []);\n            case 3:\n              _context7.p = 3;\n              _t3 = _context7.v;\n              console.error('Chyba pri načítavaní assets:', _t3);\n              this.showError('Chyba pri načítavaní majetku');\n              return _context7.a(2, []);\n          }\n        }, _callee7, this, [[1, 3]]);\n      }));\n      function loadAssetsForLocation(_x7) {\n        return _loadAssetsForLocation.apply(this, arguments);\n      }\n      return loadAssetsForLocation;\n    }()\n    /**\r\n     * Načíta užívateľov pre danú komisiu\r\n     */\n    )\n  }, {\n    key: \"loadUsersForCommission\",\n    value: (function () {\n      var _loadUsersForCommission = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(commissionId) {\n        var data, _t4;\n        return _regenerator().w(function (_context8) {\n          while (1) switch (_context8.p = _context8.n) {\n            case 0:\n              if (commissionId) {\n                _context8.n = 1;\n                break;\n              }\n              return _context8.a(2, []);\n            case 1:\n              _context8.p = 1;\n              _context8.n = 2;\n              return this.get(\"/ajax/users/\".concat(commissionId));\n            case 2:\n              data = _context8.v;\n              return _context8.a(2, data.users || []);\n            case 3:\n              _context8.p = 3;\n              _t4 = _context8.v;\n              console.error('Chyba pri načítavaní užívateľov:', _t4);\n              this.showError('Chyba pri načítavaní užívateľov');\n              return _context8.a(2, []);\n          }\n        }, _callee8, this, [[1, 3]]);\n      }));\n      function loadUsersForCommission(_x8) {\n        return _loadUsersForCommission.apply(this, arguments);\n      }\n      return loadUsersForCommission;\n    }()\n    /**\r\n     * Zobrazí chybovú správu\r\n     */\n    )\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      // Použijeme Toast notifikáciu ak je dostupná, inak alert\n      if (typeof bootstrap !== 'undefined' && bootstrap.Toast) {\n        this.showToast(message, 'error');\n      } else {\n        alert(message);\n      }\n    }\n\n    /**\r\n     * Zobrazí úspešnú správu\r\n     */\n  }, {\n    key: \"showSuccess\",\n    value: function showSuccess(message) {\n      if (typeof bootstrap !== 'undefined' && bootstrap.Toast) {\n        this.showToast(message, 'success');\n      }\n    }\n\n    /**\r\n     * Zobrazí toast notifikáciu\r\n     */\n  }, {\n    key: \"showToast\",\n    value: function showToast(message) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n      var toastId = 'ajax-toast-' + Date.now();\n      var bgClass = type === 'error' ? 'bg-danger' : type === 'success' ? 'bg-success' : 'bg-info';\n      var toastHtml = \"\\n            <div id=\\\"\".concat(toastId, \"\\\" class=\\\"toast \").concat(bgClass, \" text-white\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\">\\n                <div class=\\\"toast-header\\\">\\n                    <strong class=\\\"me-auto\\\">Syst\\xE9m</strong>\\n                    <button type=\\\"button\\\" class=\\\"btn-close btn-close-white\\\" data-bs-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\"></button>\\n                </div>\\n                <div class=\\\"toast-body\\\">\\n                    \").concat(message, \"\\n                </div>\\n            </div>\\n        \");\n      var container = document.getElementById('toast-container');\n      if (!container) {\n        container = document.createElement('div');\n        container.id = 'toast-container';\n        container.className = 'toast-container position-fixed top-0 end-0 p-3';\n        container.style.zIndex = '1055';\n        document.body.appendChild(container);\n      }\n      container.insertAdjacentHTML('beforeend', toastHtml);\n      var toastElement = document.getElementById(toastId);\n      var toast = new bootstrap.Toast(toastElement);\n      toast.show();\n\n      // Automaticky odstráň toast po zobrazení\n      toastElement.addEventListener('hidden.bs.toast', function () {\n        toastElement.remove();\n      });\n    }\n\n    /**\r\n     * Aktualizuje select element s novými options\r\n     */\n  }, {\n    key: \"updateSelectOptions\",\n    value: function updateSelectOptions(selectElement, options) {\n      var valueKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n      var textKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'name';\n      var placeholder = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      if (typeof selectElement === 'string') {\n        selectElement = document.querySelector(selectElement);\n      }\n      if (!selectElement) {\n        console.error('Select element not found');\n        return;\n      }\n\n      // Vymaž existujúce options\n      selectElement.innerHTML = '';\n\n      // Pridaj placeholder ak je zadaný\n      if (placeholder) {\n        var placeholderOption = document.createElement('option');\n        placeholderOption.value = '';\n        placeholderOption.textContent = placeholder;\n        placeholderOption.selected = true;\n        selectElement.appendChild(placeholderOption);\n      }\n\n      // Pridaj nové options\n      options.forEach(function (option) {\n        var optionElement = document.createElement('option');\n        optionElement.value = option[valueKey];\n        optionElement.textContent = option[textKey];\n        selectElement.appendChild(optionElement);\n      });\n\n      // Trigger change event pre prípad, že je na to navesený autocomplete\n      selectElement.dispatchEvent(new Event('change'));\n    }\n  }]);\n}(); // Globálna inštancia\nwindow.ajaxLoader = new AjaxLoader();\n\n// CSS štýly pre loader\nvar loaderStyles = \"\\n    .ajax-loader {\\n        position: fixed;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        z-index: 9999;\\n        display: none;\\n    }\\n\\n    .ajax-loader-backdrop {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        background-color: rgba(0, 0, 0, 0.5);\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n    }\\n\\n    .ajax-loader-content {\\n        background: white;\\n        padding: 2rem;\\n        border-radius: 0.5rem;\\n        text-align: center;\\n        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\\n    }\\n\\n    .ajax-loader-text {\\n        color: #495057;\\n        font-size: 0.9rem;\\n    }\\n\";\n\n// Pridaj CSS štýly do stránky\nif (!document.getElementById('ajax-loader-styles')) {\n  var styleSheet = document.createElement('style');\n  styleSheet.id = 'ajax-loader-styles';\n  styleSheet.textContent = loaderStyles;\n  document.head.appendChild(styleSheet);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/ajax-loader.js\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/ajax-loader.js"]();
/******/ 	
/******/ })()
;